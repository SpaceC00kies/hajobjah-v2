
export interface Job {
  id: string;
  title: string;
  location: string;
  dateTime: string;
  payment: string;
  contact: string;
  description: string;
  category: JobCategory;
  subCategory?: JobSubCategory;
  desiredAgeStart?: number;
  desiredAgeEnd?: number;
  preferredGender?: '‡∏ä‡∏≤‡∏¢' | '‡∏´‡∏ç‡∏¥‡∏á' | '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î';
  desiredEducationLevel?: JobDesiredEducationLevelOption;
  dateNeededFrom?: string | Date;
  dateNeededTo?: string | Date;
  timeNeededStart?: string;
  timeNeededEnd?: string;
  postedAt?: string | Date;
  userId: string;
  authorDisplayName: string;
  ownerId?: string;
  isSuspicious?: boolean;
  isPinned?: boolean;
  isHired?: boolean;
  createdAt?: string | Date;
  updatedAt?: string | Date;

  // New fields for expiration
  expiresAt?: string | Date; // Date when the job expires
  isExpired?: boolean;     // Flag indicating if the job has expired
}

export enum GenderOption {
  Male = '‡∏ä‡∏≤‡∏¢',
  Female = '‡∏´‡∏ç‡∏¥‡∏á',
  Other = '‡∏≠‡∏∑‡πà‡∏ô ‡πÜ / ‡πÄ‡∏û‡∏®‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å',
  NotSpecified = '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
}

export enum JobDesiredEducationLevelOption {
  Any = '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î',
  MiddleSchool = '‡∏°.‡∏ï‡πâ‡∏ô',
  HighSchool = '‡∏°.‡∏õ‡∏•‡∏≤‡∏¢',
  Vocational = '‡∏õ‡∏ß‡∏ä./‡∏õ‡∏ß‡∏™.',
  Bachelor = '‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ',
  Higher = '‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ',
}

export enum HelperEducationLevelOption {
  NotStated = '‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏',
  MiddleSchool = '‡∏°.‡∏ï‡πâ‡∏ô',
  HighSchool = '‡∏°.‡∏õ‡∏•‡∏≤‡∏¢',
  Vocational = '‡∏õ‡∏ß‡∏ä./‡∏õ‡∏ß‡∏™.',
  Bachelor = '‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ',
  Higher = '‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ',
}

export interface HelperProfile {
  id: string;
  profileTitle: string;
  details: string;
  area: string;
  availability: string;
  contact: string;
  category: JobCategory;
  subCategory?: JobSubCategory;
  gender?: GenderOption;
  birthdate?: string;
  educationLevel?: HelperEducationLevelOption;
  availabilityDateFrom?: string | Date;
  availabilityDateTo?: string | Date;
  availabilityTimeDetails?: string;
  postedAt?: string | Date;
  userId: string;
  authorDisplayName: string;
  ownerId?: string;
  isSuspicious?: boolean;
  isPinned?: boolean;
  isUnavailable?: boolean;
  adminVerifiedExperience?: boolean;
  interestedCount?: number;
  createdAt?: string | Date;
  updatedAt?: string | Date;

  // New fields for expiration and bump feature
  expiresAt?: string | Date;   // Date when the profile expires
  isExpired?: boolean;       // Flag indicating if the profile has expired
  lastBumpedAt?: string | Date; // Timestamp of the last successful bump
}

export enum UserRole {
  Admin = 'Admin',
  Moderator = 'Moderator',
  Member = 'Member',
}

export interface UserPostingLimits {
  lastJobPostDate?: string | Date; // Cooldown for jobs
  lastHelperProfileDate?: string | Date; // Cooldown for helper profiles
  dailyWebboardPosts: { // Retained for structure, not active limiting
    count: number;
    resetDate: string | Date; 
  };
  hourlyComments: { // Retained for structure, not active limiting
    count: number;
    resetTime: string | Date; 
  };
  lastBumpDates: { 
    [profileId: string]: string | Date;
  };
}

export interface UserActivityBadge {
  isActive: boolean; 
  lastActivityCheck?: string | Date; 
  last30DaysActivity: number; 
}

export type UserTier = 'free' | 'premium';


export interface User {
  id: string;
  publicDisplayName: string;
  username: string;
  email: string;
  role: UserRole;
  tier: UserTier; 
  mobile: string;
  lineId?: string;
  facebook?: string;
  gender?: GenderOption;
  birthdate?: string;
  educationLevel?: HelperEducationLevelOption;
  photo?: string;
  address?: string;
  nickname?: string;
  firstName?: string;
  lastName?: string;
  favoriteMusic?: string;
  favoriteBook?: string;
  favoriteMovie?: string;
  hobbies?: string;
  favoriteFood?: string;
  dislikedThing?: string;
  introSentence?: string;
  profileComplete?: boolean;
  userLevel: UserLevel; // This general user level badge remains for profiles etc.
  isMuted?: boolean;
  createdAt?: string | Date;
  updatedAt?: string | Date;

  postingLimits: UserPostingLimits;
  activityBadge: UserActivityBadge;
  savedWebboardPosts?: string[]; // Array of saved post IDs
}

export enum View {
  Home = 'HOME',
  PostJob = 'POST_JOB',
  FindJobs = 'FIND_JOBS',
  OfferHelp = 'OFFER_HELP',
  FindHelpers = 'FIND_HELPERS',
  Login = 'LOGIN',
  Register = 'REGISTER',
  AdminDashboard = 'ADMIN_DASHBOARD',
  MyPosts = 'MY_POSTS',
  UserProfile = 'USER_PROFILE',
  AboutUs = 'ABOUT_US',
  PublicProfile = 'PUBLIC_PROFILE',
  Safety = 'SAFETY',
  Webboard = 'WEBBOARD',
  PasswordReset = 'PASSWORD_RESET',
  CREATE_WEBBOARD_POST = 'CREATE_WEBBOARD_POST', // Added this line
}

export interface EnrichedHelperProfile extends HelperProfile {
  userPhoto?: string;
  userAddress?: string;
  profileCompleteBadge: boolean;
  warningBadge: boolean;
  verifiedExperienceBadge: boolean;
}

export interface Interaction {
  id: string;
  helperUserId: string;
  helperProfileId?: string;
  employerUserId: string;
  timestamp: string | Date;
  type: 'contact_helper';
  createdAt?: string | Date;
}

export enum WebboardCategory {
  QA = "‡∏ñ‡∏≤‡∏°-‡∏ï‡∏≠‡∏ö",
  Knowledge = "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ",
  HowTo = "How-to",
  General = "‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ",
  Other = "‡∏≠‡∏∑‡πà‡∏ô ‡πÜ",
}

export const WEBBOARD_CATEGORY_STYLES: Record<WebboardCategory, { bg: string; text: string; border?: string }> = {
  [WebboardCategory.QA]: { bg: 'bg-blue-100 dark:bg-blue-700/40', text: 'text-blue-700 dark:text-blue-200', border: 'border-blue-300 dark:border-blue-500' },
  [WebboardCategory.Knowledge]: { bg: 'bg-green-100 dark:bg-green-700/40', text: 'text-green-700 dark:text-green-200', border: 'border-green-300 dark:border-green-500' },
  [WebboardCategory.HowTo]: { bg: 'bg-purple-100 dark:bg-purple-700/40', text: 'text-purple-700 dark:text-purple-200', border: 'border-purple-300 dark:border-purple-500' },
  [WebboardCategory.General]: { bg: 'bg-gray-100 dark:bg-gray-700/40', text: 'text-gray-700 dark:text-gray-200', border: 'border-gray-300 dark:border-gray-500' },
  [WebboardCategory.Other]: { bg: 'bg-pink-100 dark:bg-pink-700/40', text: 'text-pink-700 dark:text-pink-200', border: 'border-pink-300 dark:border-pink-500' },
};

export enum JobCategory {
  DigitalCreative = '‡∏á‡∏≤‡∏ô‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå',
  EducationTutoring = '‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå',
  BusinessAdminSupport = '‡∏á‡∏≤‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡πÅ‡∏•‡∏∞‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏á‡∏≤‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£',
  ITTechnical = '‡∏á‡∏≤‡∏ô‡πÑ‡∏≠‡∏ó‡∏µ‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ',
  SalesEventsPromotion = '‡∏á‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢, ‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå ‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡∏ô',
  HomeDeliveryLifestyle = '‡∏á‡∏≤‡∏ô‡∏ö‡πâ‡∏≤‡∏ô, ‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡∏∞‡πÑ‡∏•‡∏ü‡πå‡∏™‡πÑ‡∏ï‡∏•‡πå',
  FoodService = '‡∏á‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£',
  HealthFitnessWellness = '‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡∏ü‡∏¥‡∏ï‡πÄ‡∏ô‡∏™ ‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏ß‡∏∞',
  ArtsCraftsPerformance = '‡∏®‡∏¥‡∏•‡∏õ‡∏∞ ‡∏á‡∏≤‡∏ô‡∏ù‡∏µ‡∏°‡∏∑‡∏≠ ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á',
  ShortTermMisc = '‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏™‡∏±‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏á‡∏≤‡∏ô‡∏à‡∏¥‡∏õ‡∏≤‡∏ñ‡∏∞',
}

export type FilterableCategory = JobCategory | 'all';

export const JOB_CATEGORY_EMOJIS_MAP: Record<JobCategory, string> = {
  [JobCategory.DigitalCreative]: 'üé®',
  [JobCategory.EducationTutoring]: 'üìö',
  [JobCategory.BusinessAdminSupport]: 'üíº',
  [JobCategory.ITTechnical]: 'üíª',
  [JobCategory.SalesEventsPromotion]: 'üéâ',
  [JobCategory.HomeDeliveryLifestyle]: 'üè†',
  [JobCategory.FoodService]: 'üçΩÔ∏è',
  [JobCategory.HealthFitnessWellness]: 'üí™',
  [JobCategory.ArtsCraftsPerformance]: 'üé≠',
  [JobCategory.ShortTermMisc]: '‚ö°',
};


export const JOB_CATEGORY_STYLES: Record<JobCategory, { bg: string; text: string; border?: string }> = {
  [JobCategory.DigitalCreative]: { bg: 'bg-violet-100 dark:bg-violet-700/40', text: 'text-violet-700 dark:text-violet-200', border: 'border-violet-300 dark:border-violet-500' },
  [JobCategory.EducationTutoring]: { bg: 'bg-teal-100 dark:bg-teal-700/40', text: 'text-teal-700 dark:text-teal-200', border: 'border-teal-300 dark:border-teal-500' },
  [JobCategory.BusinessAdminSupport]: { bg: 'bg-slate-100 dark:bg-slate-700/40', text: 'text-slate-700 dark:text-slate-200', border: 'border-slate-300 dark:border-slate-500' },
  [JobCategory.ITTechnical]: { bg: 'bg-blue-100 dark:bg-blue-700/40', text: 'text-blue-700 dark:text-blue-200', border: 'border-blue-300 dark:border-blue-500' },
  [JobCategory.SalesEventsPromotion]: { bg: 'bg-rose-100 dark:bg-rose-700/40', text: 'text-rose-700 dark:text-rose-200', border: 'border-rose-300 dark:border-rose-500' },
  [JobCategory.HomeDeliveryLifestyle]: { bg: 'bg-orange-100 dark:bg-orange-700/40', text: 'text-orange-700 dark:text-orange-200', border: 'border-orange-300 dark:border-orange-500' },
  [JobCategory.FoodService]: { bg: 'bg-lime-100 dark:bg-lime-700/40', text: 'text-lime-700 dark:text-lime-200', border: 'border-lime-300 dark:border-lime-500' },
  [JobCategory.HealthFitnessWellness]: { bg: 'bg-cyan-100 dark:bg-cyan-700/40', text: 'text-cyan-700 dark:text-cyan-200', border: 'border-cyan-300 dark:border-cyan-500' },
  [JobCategory.ArtsCraftsPerformance]: { bg: 'bg-fuchsia-100 dark:bg-fuchsia-700/40', text: 'text-fuchsia-700 dark:text-fuchsia-200', border: 'border-fuchsia-300 dark:border-fuchsia-500' },
  [JobCategory.ShortTermMisc]: { bg: 'bg-pink-100 dark:bg-pink-700/40', text: 'text-pink-700 dark:text-pink-200', border: 'border-pink-300 dark:border-pink-500' },
};

export enum JobSubCategory {
  DigitalCreative_GraphicDesign = "‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏Å‡∏£‡∏≤‡∏ü‡∏¥‡∏Å (‡πÇ‡∏•‡πÇ‡∏Å‡πâ, ‡πÇ‡∏õ‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå, ‡∏™‡∏∑‡πà‡∏≠‡πÇ‡∏ã‡πÄ‡∏ä‡∏µ‡∏¢‡∏•)",
  DigitalCreative_WritingTranslation = "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤ (‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤, ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°, ‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡∏ï‡πå)",
  DigitalCreative_WebMobileDev = "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏≠‡∏õ (‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå, ‡πÅ‡∏≠‡∏û‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠)",
  DigitalCreative_VideoAudioEditing = "‡∏ï‡∏±‡∏î‡∏ï‡πà‡∏≠‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏µ‡∏¢‡∏á (‡∏ï‡∏±‡∏î‡∏ï‡πà‡∏≠‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠, ‡∏ó‡∏≥‡πÄ‡∏û‡∏•‡∏á, ‡∏û‡∏≤‡∏Å‡∏¢‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á)",
  DigitalCreative_MarketingSocialMedia = "‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡πÇ‡∏ã‡πÄ‡∏ä‡∏µ‡∏¢‡∏•‡∏°‡∏µ‡πÄ‡∏î‡∏µ‡∏¢ (‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡πÄ‡∏û‡∏à, ‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå)",
  EducationTutoring_LanguageTeaching = "‡∏™‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏≤ (‡∏™‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©, ‡∏à‡∏µ‡∏ô, ‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô ‡∏Ø‡∏•‡∏Ø)",
  EducationTutoring_AcademicTutoring = "‡∏ï‡∏¥‡∏ß‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£ (‡∏Ñ‡∏ì‡∏¥‡∏ï, ‡∏ß‡∏¥‡∏ó‡∏¢‡πå, ‡∏™‡∏±‡∏á‡∏Ñ‡∏°, ‡∏î‡∏ô‡∏ï‡∏£‡∏µ)",
  EducationTutoring_ExamPrep = "‡∏ï‡∏¥‡∏ß‡∏™‡∏≠‡∏ö (GAT/PAT, IELTS/TOEFL)",
  EducationTutoring_WorkshopCraftTeaching = "‡∏™‡∏≠‡∏ô‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏Å‡∏ä‡πá‡∏≠‡∏õ/‡∏á‡∏≤‡∏ô‡∏ù‡∏µ‡∏°‡∏∑‡∏≠",
  BusinessAdminSupport_DataEntry = "‡∏Ñ‡∏µ‡∏¢‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
  BusinessAdminSupport_OnlineAssistant = "‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå",
  BusinessAdminSupport_CustomerService = "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤",
  BusinessAdminSupport_AccountingFinance = "‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô",
  BusinessAdminSupport_MarketResearch = "‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢/‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏ï‡∏•‡∏≤‡∏î",
  ITTechnical_SoftwareDevelopment = "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°",
  ITTechnical_ITSupportRepair = "‡∏ã‡πà‡∏≠‡∏°‡∏Ñ‡∏≠‡∏°‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏î‡πâ‡∏≤‡∏ô‡πÑ‡∏≠‡∏ó‡∏µ",
  ITTechnical_AIDataAnalysis = "‡∏á‡∏≤‡∏ô AI ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
  ITTechnical_WebsiteMaintenance = "‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå",
  SalesEventsPromotion_SalesPromotionStaff = "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢/‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
  SalesEventsPromotion_EventStaffMCFlyer = "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå/MC/‡πÅ‡∏à‡∏Å‡πÉ‡∏ö‡∏õ‡∏•‡∏¥‡∏ß",
  SalesEventsPromotion_MarketSurveyStaff = "‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏ï‡∏•‡∏≤‡∏î",
  SalesEventsPromotion_BoothStaff = "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ö‡∏π‡∏ò/‡∏≠‡∏≠‡∏Å‡∏ö‡∏π‡∏ò",
  HomeDeliveryLifestyle_HousekeepingCleaning = "‡πÅ‡∏°‡πà‡∏ö‡πâ‡∏≤‡∏ô/‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î",
  HomeDeliveryLifestyle_DeliveryErrands = "‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á/‡∏á‡∏≤‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ (‡∏£‡∏±‡∏ö-‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£, ‡∏ä‡πà‡∏ß‡∏¢‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á)",
  HomeDeliveryLifestyle_RepairmanHandyman = "‡∏ä‡πà‡∏≤‡∏á‡∏ã‡πà‡∏≠‡∏°/‡∏ã‡πà‡∏≠‡∏°‡πÅ‡∏ã‡∏° (‡∏ä‡πà‡∏≤‡∏á‡πÑ‡∏ü, ‡∏ä‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏õ‡∏≤)",
  HomeDeliveryLifestyle_GardeningPetCare = "‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏ß‡∏ô/‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á (‡πÄ‡∏î‡∏¥‡∏ô‡∏™‡∏∏‡∏ô‡∏±‡∏Ç, ‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå)",
  HomeDeliveryLifestyle_MovingHauling = "‡∏ä‡πà‡∏ß‡∏¢‡∏Ç‡∏ô‡∏¢‡πâ‡∏≤‡∏¢/‡∏£‡∏ñ‡∏£‡∏±‡∏ö‡∏à‡πâ‡∏≤‡∏á",
  FoodService_Barista = "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡πÅ‡∏ü",
  FoodService_KitchenAssistantCook = "‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏£‡∏±‡∏ß/‡∏û‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡∏ß/‡πÅ‡∏°‡πà‡∏Ñ‡∏£‡∏±‡∏ß",
  FoodService_CateringServing = "‡∏à‡∏±‡∏î‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á/‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
  FoodService_WaiterWaitress = "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü",
  HealthFitnessWellness_PersonalTrainerFitnessCoach = "‡πÄ‡∏ó‡∏£‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß/‡πÇ‡∏Ñ‡πâ‡∏ä‡∏ü‡∏¥‡∏ï‡πÄ‡∏ô‡∏™",
  HealthFitnessWellness_MassageSpa = "‡∏ô‡∏ß‡∏î/‡∏™‡∏õ‡∏≤",
  HealthFitnessWellness_YogaPilatesInstructor = "‡∏Ñ‡∏£‡∏π‡∏™‡∏≠‡∏ô‡πÇ‡∏¢‡∏Ñ‡∏∞/‡∏û‡∏¥‡∏•‡∏≤‡∏ó‡∏¥‡∏™",
  HealthFitnessWellness_HealthNutritionCoach = "‡πÇ‡∏Ñ‡πâ‡∏ä‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û/‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£",
  ArtsCraftsPerformance_HandicraftsGifts = "‡∏á‡∏≤‡∏ô‡∏ù‡∏µ‡∏°‡∏∑‡∏≠/‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏ó‡∏≥‡∏°‡∏∑‡∏≠",
  ArtsCraftsPerformance_PhotographyVideography = "‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠",
  ArtsCraftsPerformance_MusicPerformanceSinger = "‡∏î‡∏ô‡∏ï‡∏£‡∏µ/‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á/‡∏ô‡∏±‡∏Å‡∏£‡πâ‡∏≠‡∏á",
  ArtsCraftsPerformance_PaintingArtist = "‡∏ß‡∏≤‡∏î‡∏†‡∏≤‡∏û/‡∏®‡∏¥‡∏•‡∏õ‡∏¥‡∏ô",
  ShortTermMisc_TemporaryDailyWorker = "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß/‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô",
  ShortTermMisc_SeasonalProjectWork = "‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡∏§‡∏î‡∏π‡∏Å‡∏≤‡∏•/‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå",
  ShortTermMisc_OtherMiscTasks = "‡∏á‡∏≤‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ/‡∏á‡∏≤‡∏ô‡∏à‡∏¥‡∏õ‡∏≤‡∏ñ‡∏∞",
}

export const JOB_SUBCATEGORIES_MAP: Record<JobCategory, JobSubCategory[]> = {
  [JobCategory.DigitalCreative]: [
    JobSubCategory.DigitalCreative_GraphicDesign,
    JobSubCategory.DigitalCreative_WritingTranslation,
    JobSubCategory.DigitalCreative_WebMobileDev,
    JobSubCategory.DigitalCreative_VideoAudioEditing,
    JobSubCategory.DigitalCreative_MarketingSocialMedia,
  ],
  [JobCategory.EducationTutoring]: [
    JobSubCategory.EducationTutoring_LanguageTeaching,
    JobSubCategory.EducationTutoring_AcademicTutoring,
    JobSubCategory.EducationTutoring_ExamPrep,
    JobSubCategory.EducationTutoring_WorkshopCraftTeaching,
  ],
  [JobCategory.BusinessAdminSupport]: [
    JobSubCategory.BusinessAdminSupport_DataEntry,
    JobSubCategory.BusinessAdminSupport_OnlineAssistant,
    JobSubCategory.BusinessAdminSupport_CustomerService,
    JobSubCategory.BusinessAdminSupport_AccountingFinance,
    JobSubCategory.BusinessAdminSupport_MarketResearch,
  ],
  [JobCategory.ITTechnical]: [
    JobSubCategory.ITTechnical_SoftwareDevelopment,
    JobSubCategory.ITTechnical_ITSupportRepair,
    JobSubCategory.ITTechnical_AIDataAnalysis,
    JobSubCategory.ITTechnical_WebsiteMaintenance,
  ],
  [JobCategory.SalesEventsPromotion]: [
    JobSubCategory.SalesEventsPromotion_SalesPromotionStaff,
    JobSubCategory.SalesEventsPromotion_EventStaffMCFlyer,
    JobSubCategory.SalesEventsPromotion_MarketSurveyStaff,
    JobSubCategory.SalesEventsPromotion_BoothStaff,
  ],
  [JobCategory.HomeDeliveryLifestyle]: [
    JobSubCategory.HomeDeliveryLifestyle_HousekeepingCleaning,
    JobSubCategory.HomeDeliveryLifestyle_DeliveryErrands,
    JobSubCategory.HomeDeliveryLifestyle_RepairmanHandyman,
    JobSubCategory.HomeDeliveryLifestyle_GardeningPetCare,
    JobSubCategory.HomeDeliveryLifestyle_MovingHauling,
  ],
  [JobCategory.FoodService]: [
    JobSubCategory.FoodService_Barista,
    JobSubCategory.FoodService_KitchenAssistantCook,
    JobSubCategory.FoodService_CateringServing,
    JobSubCategory.FoodService_WaiterWaitress,
  ],
  [JobCategory.HealthFitnessWellness]: [
    JobSubCategory.HealthFitnessWellness_PersonalTrainerFitnessCoach,
    JobSubCategory.HealthFitnessWellness_MassageSpa,
    JobSubCategory.HealthFitnessWellness_YogaPilatesInstructor,
    JobSubCategory.HealthFitnessWellness_HealthNutritionCoach,
  ],
  [JobCategory.ArtsCraftsPerformance]: [
    JobSubCategory.ArtsCraftsPerformance_HandicraftsGifts,
    JobSubCategory.ArtsCraftsPerformance_PhotographyVideography,
    JobSubCategory.ArtsCraftsPerformance_MusicPerformanceSinger,
    JobSubCategory.ArtsCraftsPerformance_PaintingArtist,
  ],
  [JobCategory.ShortTermMisc]: [
    JobSubCategory.ShortTermMisc_TemporaryDailyWorker,
    JobSubCategory.ShortTermMisc_SeasonalProjectWork,
    JobSubCategory.ShortTermMisc_OtherMiscTasks,
  ],
};


export interface WebboardPost {
  id: string;
  title: string;
  body: string;
  category: WebboardCategory;
  image?: string; // URL of the image
  userId: string;
  authorDisplayName: string;
  ownerId?: string; // Retained for consistency, usually same as userId
  authorPhoto?: string; // URL of author's profile photo
  createdAt: string | Date;
  updatedAt: string | Date;
  likes: string[]; // Array of user IDs who liked the post
  isPinned?: boolean;
  isEditing?: boolean; // UI state, not stored in DB
  savedAt?: string | Date; // Timestamp for when it was saved by current user (not directly on post doc)
}

export interface WebboardComment {
  id: string;
  postId: string;
  userId: string;
  authorDisplayName: string;
  ownerId?: string; // Retained for consistency, usually same as userId
  authorPhoto?: string; // URL of author's profile photo
  text: string;
  createdAt: string | Date;
  updatedAt: string | Date;
}

export enum UserLevelName {
  Level1_NewbiePoster = "üê£ ‡∏°‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏´‡∏±‡∏î‡πÇ‡∏û‡∏™‡∏ï‡πå",
  Level2_FieryNewbie = "üî• ‡πÄ‡∏î‡πá‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏ü‡πÅ‡∏£‡∏á",
  Level3_RegularSenior = "üëë ‡∏£‡∏∏‡πà‡∏ô‡∏û‡∏µ‡πà‡∏Ç‡∏≤‡∏õ‡∏£‡∏∞‡∏à‡∏≥",
  Level4_ClassTeacher = "üìò ‡∏Ñ‡∏£‡∏π‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ä‡∏±‡πâ‡∏ô",
  Level5_KnowledgeGuru = "üß† ‡∏Å‡∏π‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏£‡∏≠‡∏ö‡∏£‡∏π‡πâ",
  Level6_BoardFavorite = "üíñ ‡∏Ç‡∏ß‡∏±‡∏ç‡πÉ‡∏à‡∏ä‡∏≤‡∏ß‡∏ö‡∏≠‡∏£‡πå‡∏î",
  Level7_LegendOfHajobjah = "ü™Ñ ‡∏ï‡∏≥‡∏ô‡∏≤‡∏ô‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏Ç‡∏≠‡∏á‡∏´‡∏≤‡∏à‡πä‡∏≠‡∏ö‡∏à‡πâ‡∏≤",
}

export interface UserLevel {
  name: string;
  minScore?: number;
  colorClass: string;
  textColorClass?: string;
}

export const USER_LEVELS: UserLevel[] = [
  { name: UserLevelName.Level1_NewbiePoster, minScore: 0, colorClass: 'bg-green-200 dark:bg-green-700/50', textColorClass: 'text-green-800 dark:text-green-200' },
  { name: UserLevelName.Level2_FieryNewbie, minScore: 5, colorClass: 'bg-lime-200 dark:bg-lime-700/50', textColorClass: 'text-lime-800 dark:text-lime-200' },
  { name: UserLevelName.Level3_RegularSenior, minScore: 15, colorClass: 'bg-cyan-200 dark:bg-cyan-700/50', textColorClass: 'text-cyan-800 dark:text-cyan-200' },
  { name: UserLevelName.Level4_ClassTeacher, minScore: 30, colorClass: 'bg-amber-300 dark:bg-amber-600/60', textColorClass: 'text-amber-800 dark:text-amber-100' },
  { name: UserLevelName.Level5_KnowledgeGuru, minScore: 50, colorClass: 'bg-violet-300 dark:bg-violet-600/60', textColorClass: 'text-violet-800 dark:text-violet-100' },
  { name: UserLevelName.Level6_BoardFavorite, minScore: 80, colorClass: 'bg-pink-300 dark:bg-pink-600/60', textColorClass: 'text-pink-800 dark:text-pink-100' },
  { name: UserLevelName.Level7_LegendOfHajobjah, minScore: 120, colorClass: 'bg-teal-300 dark:bg-teal-600/60', textColorClass: 'text-teal-800 dark:text-teal-100' },
];

export const ADMIN_BADGE_DETAILS: UserLevel = {
  name: "üåü ‡∏ú‡∏π‡πâ‡∏û‡∏¥‡∏ó‡∏±‡∏Å‡∏©‡πå‡∏à‡∏±‡∏Å‡∏£‡∏ß‡∏≤‡∏•",
  colorClass: 'bg-yellow-100 dark:bg-yellow-700/30',
  textColorClass: 'text-yellow-800 dark:text-yellow-200',
};

export const MODERATOR_BADGE_DETAILS: UserLevel = {
  name: "üëÆ ‡∏ú‡∏π‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏Å‡∏≤‡∏£",
  colorClass: 'bg-blue-400 dark:bg-blue-500/70',
  textColorClass: 'text-blue-900 dark:text-blue-50',
};

export const ACTIVITY_BADGE_DETAILS: UserLevel = { // For "üî• ‡∏Ç‡∏¢‡∏±‡∏ô‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡πá‡∏ö"
    name: "üî• ‡∏Ç‡∏¢‡∏±‡∏ô‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡πá‡∏ö",
    colorClass: 'bg-orange-200 dark:bg-orange-600/40',
    textColorClass: 'text-orange-800 dark:text-orange-200',
};

// Enriched types for Webboard - authorLevel is removed as badges are not shown on webboard items
export interface EnrichedWebboardPost extends WebboardPost {
  commentCount: number;
  // authorLevel: UserLevel; // Removed for webboard card/detail
  isAuthorAdmin?: boolean;
}

export interface EnrichedWebboardComment extends WebboardComment {
  // authorLevel: UserLevel; // Removed for webboard comments
  isAuthorAdmin?: boolean;
}

export interface SiteConfig {
    isSiteLocked: boolean;
    updatedAt?: string | Date;
    updatedBy?: string;
}

// For storing user's saved posts in Firestore
export interface UserSavedWebboardPostEntry {
  postId: string;
  savedAt: string | Date;
}
