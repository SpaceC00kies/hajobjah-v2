import React, { useEffect, useRef } from 'react';
import { Button } from './Button.tsx';
import { Modal } from './Modal.tsx';
import { useNavigate } from 'react-router-dom';


interface ConfirmModalProps {
  isOpen: boolean;
  onClose: () => void;
  onConfirm: () => void;
  title: string;
  message: string;
}

export const ConfirmModal: React.FC<ConfirmModalProps> = ({ isOpen, onClose, onConfirm, title, message }) => {
  const navigate = useNavigate();
  const confirmButtonRef = useRef<HTMLButtonElement>(null);
  
  const handleActualConfirm = () => {
    onConfirm();
    // Parent will typically close the modal by setting isOpen to false
  };

  const modalDescription = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ";

  return (
    <Modal
      isOpen={isOpen}
      onClose={onClose}
      title={title}
      description={modalDescription}
      initialFocusRef={confirmButtonRef}
    >
      <div role="alertdialog" aria-describedby="confirm-modal-message">
        <p id="confirm-modal-message" className="font-serif text-base text-neutral-dark mb-6 whitespace-pre-wrap">
          {message.includes("‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢") ? (
            <>
              <span className="font-sans font-semibold text-lg flex items-center gap-2 mb-2">
                <span>‚ö†Ô∏è</span>
                <span>‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏°‡∏¥‡∏à‡∏â‡∏≤‡∏ä‡∏µ‡∏û</span>
              </span>
              <br/>
              ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡∏•‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏£‡∏ô‡∏±‡∏î‡πÄ‡∏à‡∏≠‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡∏´‡∏≤‡∏à‡πä‡∏≠‡∏ö‡∏à‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏ô‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô ‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏ç‡∏≤‡∏ì‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ ‡∏â‡∏ö‡∏±‡∏ö‡πÄ‡∏ï‡πá‡∏°‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤{" "}
              <button
                onClick={() => { onClose(); navigate('/safety'); }}
                className="font-serif font-normal underline text-neutral-dark hover:text-secondary focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-1"
                type="button"
              >
                "‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢"
              </button>
            </>
          ) : (
            message
          )}
        </p>
        <div className="flex flex-col sm:flex-row justify-end gap-3">
          <Button 
            onClick={onClose} 
            variant="outline" 
            colorScheme="neutral" 
            size="md" 
            className="w-full sm:w-auto"
            type="button"
          >
            ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
          </Button>
          <Button 
            ref={confirmButtonRef}
            onClick={handleActualConfirm} 
            size="md"
            className="w-full sm:w-auto bg-red-600 hover:bg-red-700 text-white font-semibold focus:ring-2 focus:ring-red-500/50 focus:ring-offset-2"
            type="button"
          >
            <span className="flex items-center justify-center gap-1.5">
              <span>üóëÔ∏è</span>
              <span>‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</span>
            </span>
          </Button>
        </div>
      </div>
    </Modal>
  );
};